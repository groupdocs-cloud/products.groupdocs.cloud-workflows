name: i18n-pipeline (Products)

on:
  workflow_dispatch:
    inputs:
      branch:
        description: Branch to checkout from products.groupdocs.cloud
        type: string
        default: master
        required: true

jobs:
  i18n:
    runs-on: ubuntu-latest

    steps:
      # 1) (Optional) checkout this workflows repo (kept for provenance)
      - name: Checkout orchestrator repo
        uses: actions/checkout@v4

      # 2) Checkout the PRIVATE repo we actually want to run in
      - name: Checkout products.groupdocs.cloud (private)
        uses: actions/checkout@v4
        with:
          repository: groupdocs-cloud/products.groupdocs.cloud
          ref: ${{ github.event.inputs.branch }}
          token: ${{ secrets.REPO_TOKEN }}     # PAT with repo read (and write if ever needed)
          path: src

      # 3) Node runtime
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # 4) Install deps (ci if lockfile exists; else install)
      - name: Install dependencies
        working-directory: src
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi      

      - name: Write Google credentials file
        shell: bash
        run: |
          # 1) Write the secret into a real file under the 'src' workspace
          printf '%s' "${{ secrets.GOOGLE_CREDENTIALS_JSON }}" > "$GITHUB_WORKSPACE/src/gcloud.json"

          # 2) Export absolute path for subsequent steps
          echo "GOOGLE_APPLICATION_CREDENTIALS=$GITHUB_WORKSPACE/src/gcloud.json" >> "$GITHUB_ENV"

          # 3) Sanity check (prints PATH only, not file contents)
          echo "GAC path: $GITHUB_WORKSPACE/src/gcloud.json"
          test -f "$GITHUB_WORKSPACE/src/gcloud.json"
      
      # 5) Run your full local chain (configure → pages → i18n:auto → merge → fallback → publish)
      - name: Run i18n (full chain)
        working-directory: src
        env:
          # Gist PAT (gist:write). Mapped to the env var your script expects.
          GITHUB_TOKEN: ${{ secrets.GIST_TOKEN }}         

          # Optional knobs consumed by your scripts
          MAX_PROCESS_PARALLEL_PAGES: ${{ secrets.MAX_PROCESS_PARALLEL_PAGES }}

          # Optional if you made Gist ID configurable in i18n-publish.cjs
          # GIST_ID: ${{ secrets.GIST_ID }}
        run: npm run i18n

      # 6) (Optional) Re-run pages to materialize with freshest strings (harmless if npm run i18n already did it)
      # - name: Generate pages (optional)
      #   working-directory: src
      #   run: npm run pages

      # 7) (Optional) Upload generated content for inspection/debug
      - name: Upload generated content (optional)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: generated-content
          path: src/generated-content/
          if-no-files-found: ignore
